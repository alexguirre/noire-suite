cmake_minimum_required(VERSION 3.12)

project(noire-suite)

option(GEN_FILE_EXPLORER "Whether to generate build files for noire-file-explorer." ON)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)


if (CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_CONFIGURATION_TYPES Debug Release)
    set(CMAKE_CONFIGURATION_TYPES ${CMAKE_CONFIGURATION_TYPES} CACHE STRING "Configs" FORCE)
endif()


set(LIB_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
set(BIN_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${LIB_OUTPUT_DIRECTORY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${LIB_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BIN_OUTPUT_DIRECTORY})
foreach(OUTPUT_CONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string(TOUPPER ${OUTPUT_CONFIG} OUTPUT_CONFIG )
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUT_CONFIG} ${LIB_OUTPUT_DIRECTORY})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUT_CONFIG} ${LIB_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUT_CONFIG} ${BIN_OUTPUT_DIRECTORY})
endforeach(OUTPUT_CONFIG CMAKE_CONFIGURATION_TYPES)


set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

find_path(MSGSL_INCLUDE_DIR gsl/gsl)
if (MSGSL_INCLUDE_DIR STREQUAL MSGSL_INCLUDE_DIR-NOTFOUND)
    message(FATAL_ERROR "MS-GSL not found")
endif()

add_compile_definitions(NOMINMAX GSL_THROW_ON_CONTRACT_VIOLATION)

add_compile_options(/permissive- /W4 /WX "$<IF:$<CONFIG:Debug>,/MTd,/MT>")

add_subdirectory(hook)
add_subdirectory(formats)
if(GEN_FILE_EXPLORER)
    add_subdirectory(file-explorer)
endif()
